---
meta:
  author: "ngoctin"
  enabled: true
  name: "nosql injection"
  description: "Polaris Custom rules test"
tests:
  - test_title: "666666003-1"
    desc: "NoSQL injection in URI 1"
    stages:
      - stage:
          input:
            dest_addr: "localhost"
            method: "GET"
            port: 80
            headers:
              Host: "localhost"
              User-Agent: "ModSecurity CRS 3 Tests"
            uri: "/?username[$ge]=a"
          output:
            log_contains: 'id "666666003"'
            response_contains: "403 Forbidden"
  - test_title: "666666003-2"
    desc: "NoSQL injection in URI 2"
    stages:
      - stage:
          input:
            dest_addr: "localhost"
            method: "GET"
            port: 80
            headers:
              Host: "localhost"
              User-Agent: "ModSecurity CRS 3 Tests"
            uri: "/?username[$ne]=toto&password[$regex]=m.*"
          output:
            log_contains: 'id "666666003"'
            response_contains: "403 Forbidden"
  - test_title: "666666004-1"
    desc: "NoSQL injection in JSON body"
    stages:
      - stage:
          input:
            dest_addr: "127.0.0.1"
            port: 80
            headers:
              Host: "localhost"
              User-Agent: "ModSecurity CRS 3 Tests"
              Accept: "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
              Accept-Charset: "ISO-8859-1,utf-8;q=0.7,*;q=0.7"
              Accept-Encoding: "gzip,deflate"
              Accept-Language: "en-us,en;q=0.5"
              Content-Type: "application/json"
            uri: "/"
            method: "POST"
            version: "HTTP/1.0"
            data: "{\"username\": {\"$eq\": \"admin\"}, \"password\": {\"$regex\": \"^m\" }}"
          output:
            log_contains: 'id "666666004"'
            response_contains: "403 Forbidden"
  - test_title: "666666005-1"
    desc: "MongoDB injection in $where expression 1"
    stages:
      - stage:
          input:
            dest_addr: "localhost"
            method: "GET"
            port: 80
            headers:
              Host: "localhost"
              User-Agent: "ModSecurity CRS 3 Tests"
            uri: "/?username=a%27%20%7C%7C%20%27a%27%3D%3D%27a" # a' || 'a'=='a
          output:
            log_contains: 'id "666666005"'
            response_contains: "403 Forbidden"
  - test_title: "666666005-2"
    desc: "MongoDB injection in $where expression 2"
    stages:
      - stage:
          input:
            dest_addr: "127.0.0.1"
            port: 80
            headers:
              Host: "localhost"
              User-Agent: "ModSecurity CRS 3 Tests"
              Accept: "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
              Accept-Charset: "ISO-8859-1,utf-8;q=0.7,*;q=0.7"
              Accept-Encoding: "gzip,deflate"
              Accept-Language: "en-us,en;q=0.5"
              Content-Type: "multipart/form-data; boundary=--------------------------182751749058134166261253"
            uri: "/"
            method: "POST"
            version: "HTTP/1.1"
            data: "----------------------------182751749058134166261253\r\nContent-Disposition: form-data; name=\"username\"\r\n\r\na' || 'a'=='a\r\n----------------------------182751749058134166261253--"
          output:
            log_contains: 'id "666666005"'
            response_contains: "403 Forbidden"
  - test_title: "666666005-3"
    desc: "MongoDB injection in $where expression 3"
    stages:
      - stage:
          input:
            dest_addr: "127.0.0.1"
            port: 80
            headers:
              Host: "localhost"
              User-Agent: "ModSecurity CRS 3 Tests"
              Accept: "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
              Accept-Charset: "ISO-8859-1,utf-8;q=0.7,*;q=0.7"
              Accept-Encoding: "gzip,deflate"
              Accept-Language: "en-us,en;q=0.5"
              Content-Type: "application/json"
            uri: "/"
            method: "POST"
            version: "HTTP/1.1"
            data: "{\"username\": \"a' || 'a'=='a'\"}"
          output:
            log_contains: 'id "666666005"'
            response_contains: "403 Forbidden"